Javascript

•	Javascript is a client side scripting language.
•	It is use to make webpage alive.
•	It is used to perform programmatically performs actions within the page.
•	When javascript was created, it was initially called “Livescript”.

What JavaScript can do?
•	Java can execute not only in the browser, but also on the server.
•	We will use JavaScript as a client as well as server side language.
•	JavaScript has evolved greatly as a language and is now used to perform a wide variety of tasks.

What Can In-Browser JavaScript Do?

If JavaScripts are used in any websites, then it should not be given any low level CPU permissions like switching off the CPU etc. That is why JavaScript is made with extremely safe permissions that does not have any permission to access low level CPU usage. 

1.	JavaScript can add new HTML and change existing HTML from DOM.
2.	It can even react to any events (actions).
3.	It can also manage the AJAX requests (GET or POST request)
4.	JavaScript can get and set cookies and use local storage.

What Can’t In-Browser JavaScript Do?
1.	JavaScript cannot read or write to and from computer hard disk without user permissions. 
2.	The browser does not allow the JavaScript of any website to collect the AJAX information of the other website because it generates the error of  same origin policy.
3.	To summarize, JavaScript can only access the permitted resources but cannot access your documents on personal computers. 
These strict policies are developed to make sure that your computer is safe.


What Makes JavaScript a Unique language?

•	 The most important thing that makes it a unique language is, it has a complete integration of HTML and CSS. They provide it with a lot of extra support.
•	Also it provides the use of simple APIs (Application Programming Interface).
•	It also supports the major modern browsers which are enabled by default. If you turn off the feature of JavaScript in the browser, you cannot access any website.
Versions of JavaScript

JavaScript is such an important language that it requires substantial updates to maintain its different versions. The ECMA is a standard maintained for any of the scripting languages that pushes for new updates. The ECMA was first launched in 1997.

Writing in-browser JavaScript and Developer Console 

We have two options to place the JavaScript in the code. One is in the <head> section and the other is after the <body> tag. But if we view other professional websites, they place their JavaScript at the end of the <body> tag so that the DOM does not get affected. The basic code of JavaScript is as follows-
<script>
//‘Console.log’ is use to display the value in console. 
        console.log('Hello world');  
    </script>
There are two ways to implement javascript:
1.	Internal javascript 
2.	External javascript

Alert function : – 
The alert() method in JavaScript is used to display a virtual alert box. It is mostly used to give a warning message to the users. It displays an alert dialog box that consists of some specified message (which is optional) and an OK button. When the dialog box pops up, we have to click "OK" to proceed.
alert(“Hello World”) ;
This will give pop up as Hello World.
Variables in Javascript
The JavaScript variables are the containers for storing data values. Make a new file as and add an instant boilerplate to get the basic HTML code.
var a = 78;
var b = "Hello World";
We cannot override the variable if we are using ‘const’ keyword.
In JavaScript, let is a keyword that is used to declare a block scoped variable. Usually, the var keyword is used to declare a variable in JavaScript which is treated as a normal variable, but the variables declared using the let keyword are block scoped.
e.g. let age = 25;

Data Types

String
Used to store letter word or sentence
Example:
Let a=’Hello World’;
1)	Concat
Let a=”hello”;
Let b=”world”;
Let c=a+b;
2)	Get characters
Console.log(c[2]);
3)	Length
Console.log(c.length);
NOTE: Functions are used to perform specific task whereas methods is associated objects and data type


Methods	
•	Console.log(c.toUpperCase()); - to print in uppercase
•	Console.log(c.toLowerCase()); - print in lowercase
